{"version":3,"sources":["App/data/routes.js","App/components/Nav/Nav.js","App/data/algorithms.js","App/components/Buttons/AlgorithmsButton.js","App/Algorithms/MergeSort.js","App/Algorithms/BubbleSort.js","App/Algorithms/QuickSort.js","App/Algorithms/HeapSort.js","App/components/Container/Container.js","App/components/Buttons/ArrayModificationButton.js","App/layouts/Main.js","App/views/SortingVisualizer.js","App.js","serviceWorker.js","index.js"],"names":["routes","path","label","index","Nav","logo","filter","data","map","idx","className","href","key","links","algorithms","AlgorithmsButton","props","onClickHandler","e","run","selectAlgo","target","name","disabled","button","onClick","getMergeSortAnimation","array","length","animation","anotherArray","slice","mergeSort","l","r","m","Math","floor","k","i","j","push","doMerge","getBubbleSortAnimation","temp","bubbleSort","console","log","getQuickSortAnimation","quickSort","low","high","pi","pivot","partition","heapify","n","largest","getHeapSortAnimation","heapSort","Container","algorithm","algo","arrayCopy","MergeSortAnimation","BubbleSortAnimation","QuickSortAnimation","HeapSortAnimation","arrayBars","document","getElementsByClassName","barOneId","barTwoId","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","newHeight","height","margin","stopAnimation","copyArray","value","width","ArrayModificationButton","state","x","sliderChangeHandler","bind","newArrayHandler","this","setState","changeArraySize","nextProps","marginBottom","border","padding","color","axis","xstep","xmin","xmax","onChange","styles","track","active","thumb","opacity","Component","Main","startAnimation","SortingVisualizer","arraySize","randomNumber","size","generateNewArray","setArray","min","max","ceil","random","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b3eecdc.chunk.js","sourcesContent":["const routes = [\n    {\n        path: 'https://arijitiiest.github.io/portfolio/#/',\n        label: 'ARIJIT CHOWDHURY',\n        index: true\n    },\n    {\n        path: 'https://arijitiiest.github.io/portfolio/#/about',\n        label: 'ABOUT'\n    },\n    {\n        path: 'https://arijitiiest.github.io/portfolio/#/resume',\n        label: 'RESUME'\n    },\n    {\n        path: 'https://arijitiiest.github.io/portfolio/#/projects',\n        label: 'PROJECTS'\n    },\n    {\n        path: 'https://arijitiiest.github.io/portfolio/#/contact',\n        label: 'CONTACT'\n    }\n];\n\nexport default routes;","import React from 'react';\n\nimport routes from '../../data/routes';\nimport './Nav.css';\n\nconst Nav = () => {\n    const logo = routes\n    .filter(data => data.index)\n    .map((data, idx) => (\n      <a className=\"header_logo-link\" href={data.path} key={idx}>\n        {data.label}\n      </a>\n    ));\n\n    const links = routes\n    .filter(data => !data.index)\n    .map((data, idx) => (\n      <a\n        className=\"header_navigation-items-link\"\n        href={data.path}\n        key={idx}\n      >\n        {data.label}\n      </a>\n    ));\n\n    return(\n        <header className=\"header\">\n      <nav className=\"header_navigation\">\n        <div className=\"header_logo\"> {logo} </div>\n        <div className=\"header_navigation-items\">\n          <ul>{links}</ul>\n        </div>\n      </nav>\n    </header>\n    )\n}\n\nexport default Nav;","const algorithms = [\n    {\n        label: 'Quick Sort'\n    },\n    {\n        label: 'Merge Sort'\n    },\n    {\n        label: 'Heap Sort'\n    },\n    {\n        label: 'Bubble Sort'\n    }\n];\n\nexport default algorithms;","import React from 'react';\n\nimport './button.css';\nimport algorithms from '../../data/algorithms';\n\n\n\nconst AlgorithmsButton = props => {\n    const onClickHandler = (e) => {\n        if (!props.run)\n            props.selectAlgo(e.target.name);\n    }\n    \n    let disabled = \"\";\n    if (props.run) {\n        disabled = \"disabled\";\n    } else {\n        disabled = \"\";\n    }\n\n    const button = algorithms.map((data, idx) => (\n        <button key={idx} name={data.label} onClick={onClickHandler} className={disabled} >{data.label}</button>\n    ));\n\n    return(\n        <div className=\"algoButton\">\n            {button}\n        </div>\n        \n    )\n}\n\nexport default AlgorithmsButton;","const getMergeSortAnimation = array => {\n    if (array.length <= 1) return array;\n    const animation = [];\n    const anotherArray = array.slice();\n    mergeSort(array, 0, array.length-1, anotherArray, animation);\n    return animation;\n}\n\nfunction mergeSort(array, l, r, anotherArray, animation) {\n    if (l === r) return;\n    const m = Math.floor((l+r)/2);\n\n    mergeSort(anotherArray, l, m, array, animation);\n    mergeSort(anotherArray, m+1, r, array, animation);\n\n    doMerge(array, l, m, r, anotherArray, animation);\n}\n\nfunction doMerge(array, l, m, r, anotherArray, animation) {\n    let k = l;\n    let i = l;\n    let j = m+1;\n\n    while(i <= m && j <= r) {\n        animation.push([i, j]);\n        animation.push([i, j]);\n        if(anotherArray[i] <= anotherArray[j]) {\n            animation.push([k, anotherArray[i]]);\n            animation.push([k, anotherArray[i]]);\n            array[k++] = anotherArray[i++];\n        } else {\n            animation.push([k, anotherArray[j]]);\n            animation.push([k, anotherArray[j]]);\n            array[k++] = anotherArray[j++];\n        }\n    }\n    while (i <= m) {\n        animation.push([i, i]);\n        animation.push([i, i]);\n        animation.push([k, anotherArray[i]]);\n        animation.push([k, anotherArray[i]]);\n        array[k++] = anotherArray[i++];\n    }\n    while (j <= r) {\n        animation.push([j, j]);\n        animation.push([j, j]);\n        animation.push([k, anotherArray[j]]);\n        animation.push([k, anotherArray[j]]);\n        array[k++] = anotherArray[j++];\n    }\n}\n\n\nexport default getMergeSortAnimation;","const getBubbleSortAnimation = array => {\n    if (array.length <= 1) return array;\n    const animation = [];\n    bubbleSort(array, animation);\n    console.log(animation);\n    return animation;\n}\n\nfunction bubbleSort(array, animation) {\n    for (let i=0; i<array.length; i++) {\n        for (let j=0; j<array.length-i-1; j++) {\n            if(array[j] > array[j+1]) {\n                const temp = array[j];\n                array[j] = array[j+1];\n                array[j+1] = temp;\n                animation.push([j, j+1]);\n                animation.push([j, j+1]);\n                animation.push([j, array[j]]);\n                animation.push([j+1, array[j+1]]);\n            }\n        }\n    }\n}\n\nexport default getBubbleSortAnimation;","const getQuickSortAnimation = array => {\n    if (array.length <= 1) return;\n    const animation = [];\n    quickSort(array, 0, array.length-1, animation);\n    return animation;\n}\n\nfunction quickSort(array, low, high, animation) {\n    if (low < high) {\n        const pi = partition(array, low, high, animation);\n\n        quickSort(array, low, pi-1, animation);\n        quickSort(array, pi+1, high, animation);\n    }\n}\n\nfunction partition(array, low, high, animation) {\n    const pivot = array[high];\n    let i = low-1;\n\n    for (let j=low; j<high; j++) {\n        if (array[j] < pivot) {\n            i++;\n            const temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n\n            animation.push([i, j]);\n            animation.push([i, j]);\n            animation.push([i, array[i]]);\n            animation.push([j, array[j]]);\n        }\n    }\n\n    const temp = array[i+1];\n    array[i+1] = array[high];\n    array[high] = temp;\n\n    animation.push([i+1, high]);\n    animation.push([i+1, high]);\n    animation.push([i+1, array[i+1]]);\n    animation.push([high, array[high]]);\n    return (i+1);\n}\n\nexport default getQuickSortAnimation;","const getHeapSortAnimation = array => {\n    if (array.length <= 1) return;\n    const animation = [];\n    heapSort(array, animation);\n    return animation;\n}\n\nfunction heapSort(array, animation) {\n    const n = array.length;\n    for (let i=Math.floor(n/2)-1; i>=0; i--) {\n        heapify(array, n, i, animation);\n    }\n\n    for (let i=n-1; i>=0; i--) {\n        const temp = array[0];\n        array[0] = array[i];\n        array[i] = temp;\n\n        animation.push([0, i]);\n        animation.push([0, i]);\n        animation.push([0, array[0]]);\n        animation.push([i, array[i]]);\n\n        heapify(array, i, 0, animation);\n    }\n}\n\nfunction heapify(array, n, i, animation) {\n    let largest = i;\n    let l = 2*i+1;\n    let r = 2*i+2;\n\n    if (l<n && array[l]>array[largest]) largest = l;\n\n    if (r<n && array[r]>array[largest]) largest = r;    \n\n    if (largest !== i) {\n        const temp = array[i];\n        array[i] = array[largest];\n        array[largest] = temp;\n\n        animation.push([i, largest]);\n        animation.push([i, largest]);\n        animation.push([i, array[i]]);\n        animation.push([largest, array[largest]]);\n\n        heapify(array, n, largest, animation);\n    }\n}\n\nexport default getHeapSortAnimation;","import React from 'react';\n\nimport './Container.css';\nimport MergeSortAnimation from '../../Algorithms/MergeSort';\nimport BubbleSortAnimation from '../../Algorithms/BubbleSort';\nimport QuickSortAnimation from '../../Algorithms/QuickSort';\nimport HeapSortAnimation from '../../Algorithms/HeapSort';\n\nconst ANIMATION_SPEED = 5;\nconst PRIMARY_COLOR = '#2056b3';\nconst SECONDARY_COLOR = 'red';\n\nconst Container = props => {\n    let run = props.run;\n    if(run) {\n        let algorithm = props.algo;\n        let array = props.array;\n        const arrayCopy = array.slice();\n        let animation = [];\n        switch (algorithm) {\n            case 'Merge Sort': animation = MergeSortAnimation(arrayCopy); break;\n\n            case 'Bubble Sort': animation = BubbleSortAnimation(arrayCopy); break;\n\n            case 'Quick Sort': animation = QuickSortAnimation(arrayCopy); break;\n\n            case 'Heap Sort': animation = HeapSortAnimation(arrayCopy); break;\n\n            default: console.log('No animation')\n        }\n\n        for (let i=0; i<animation.length; i++) {\n            const arrayBars = document.getElementsByClassName('array-bar');\n            if(i%4 === 0) {\n                const [barOneId, barTwoId] = animation[i];\n                const barOneStyle = arrayBars[barOneId].style;\n                const barTwoStyle = arrayBars[barTwoId].style;\n\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = SECONDARY_COLOR;\n                    barTwoStyle.backgroundColor = SECONDARY_COLOR;\n                }, i * ANIMATION_SPEED);\n            } else if (i%4 === 1) {\n                const [barOneId, barTwoId] = animation[i];\n                const barOneStyle = arrayBars[barOneId].style;\n                const barTwoStyle = arrayBars[barTwoId].style;\n\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = PRIMARY_COLOR;\n                    barTwoStyle.backgroundColor = PRIMARY_COLOR;\n                }, i * ANIMATION_SPEED);\n            }\n            else {\n                const [barOneId, newHeight] = animation[i];\n                const barOneStyle = arrayBars[barOneId].style;\n                setTimeout(() => {\n                    barOneStyle.height = `${newHeight}px`;\n                    barOneStyle.margin = `${730 - newHeight}px ${10/props.array.length}% auto`\n                }, i * ANIMATION_SPEED);\n            }\n        }\n\n        setTimeout(() => {\n            props.stopAnimation();\n            props.copyArray(arrayCopy);\n        }, animation.length * ANIMATION_SPEED)\n        \n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"array-bars\">\n                {props.array.map((value, idx) => (\n                    <div \n                        className=\"array-bar\"\n                        key={idx}\n                        style={{\n                            height: `${value}px`,\n                            width: `${80/props.array.length}%`,\n                            margin: `${730 - value}px ${10/props.array.length}% auto`\n                        }}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Container;","import React, { Component } from 'react';\nimport Slider from 'react-input-slider';\n\nimport './button.css';\n\nclass ArrayModificationButton extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            x: 100,\n            disabled: \"\"\n        }\n        this.sliderChangeHandler = this.sliderChangeHandler.bind(this);\n        this.newArrayHandler = this.newArrayHandler.bind(this);\n    }\n    \n    sliderChangeHandler(e) {\n        if (!this.props.run)\n            this.setState({ x: e.x }, () => this.props.changeArraySize(this.state.x))\n    }\n\n    newArrayHandler() {\n        if (!this.props.run)\n            this.setState({ x: this.state.x }, () => this.props.changeArraySize(this.state.x))\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        if (nextProps.run) {\n            this.setState({ disabled: \"disabled\" });\n        } else {\n            this.setState({ disabled: \"\" });\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"arrayButton\">\n                <button onClick={this.newArrayHandler} className={this.state.disabled}>Generate New Array</button>\n\n                <div style={{marginBottom: \"10px\", border: \"2px solid #403d6b\", padding: \"10px\", color: \"#403d6b\"}}>No of Bars: {'x: ' + this.state.x}</div>\n                <Slider\n                    axis=\"x\"\n                    xstep={1}\n                    xmin={5}\n                    xmax={200}\n                    x={this.state.x}\n                    onChange={this.sliderChangeHandler}\n                    styles={{\n                        track: {\n                        backgroundColor: '#bfb6e3'\n                        },\n                        active: {\n                        backgroundColor: '#403d6b'\n                        },\n                        thumb: {\n                        width: 25,\n                        height: 25\n                        },\n                        disabled: {\n                        opacity: 0.5\n                        }\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\n\nexport default ArrayModificationButton;","import React from 'react';\n\nimport './Main.css';\nimport Nav from '../components/Nav/Nav';\nimport AlgorithmsButton from '../components/Buttons/AlgorithmsButton';\nimport Container from '../components/Container/Container';\nimport ArrayModificationButton from '../components/Buttons/ArrayModificationButton';\n\nconst Main = props => (\n    <div>\n        <Nav />\n        <div className=\"body\">\n            <ArrayModificationButton changeArraySize={props.changeArraySize} run={props.run} /> \n            <Container array={props.array} run={props.run} algo={props.algo} stopAnimation={props.stopAnimation} copyArray={props.copyArray} />\n            <AlgorithmsButton selectAlgo={props.selectAlgo} run={props.run} />\n        </div>\n        <div className=\"play\">\n            <button onClick={props.startAnimation}>Start {props.algo}</button>\n        </div>\n    </div>\n)\n\nexport default Main;","import React, { Component } from 'react';\n\nimport Main from '../layouts/Main';\n\nclass SortingVisualizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            array: [],\n            arraySize: 100,\n            algo: '',\n            run: false\n        };\n        this.changeArraySize = this.changeArraySize.bind(this);\n        this.selectAlgo = this.selectAlgo.bind(this);\n        this.startAnimation = this.startAnimation.bind(this);\n        this.stopAnimation = this.stopAnimation.bind(this);\n        this.copyArray = this.copyArray.bind(this);\n    }\n\n    generateNewArray() {\n        const array = [];\n        for (let i=0; i<this.state.arraySize; i++) {\n            array.push(randomNumber(5, 720));\n        }\n        this.setState({array});\n    }\n\n    changeArraySize(size) {\n        this.setState({arraySize: size}, () => this.generateNewArray());\n    }\n\n    selectAlgo(algo) {\n        this.setState({ algo: algo })\n    }\n\n    startAnimation() {\n        if (!this.state.run)\n            this.setState({ run: true });\n    }\n\n    stopAnimation() {\n        if (this.state.run)\n            this.setState({ run: false })\n    }\n\n    copyArray(array) {\n        this.setState({array})\n    }\n\n    componentDidMount() {\n        this.generateNewArray();\n    }\n\n    render() {\n        return(\n            <Main \n                array={this.state.array} \n                changeArraySize={this.changeArraySize} \n                selectAlgo={this.selectAlgo} \n                algo={this.state.algo}\n                run={this.state.run}\n                startAnimation={this.startAnimation}\n                stopAnimation={this.stopAnimation}\n                setArray={this.setArray}\n                copyArray={this.copyArray}\n                />\n        );\n    }\n}\n\nconst randomNumber = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default SortingVisualizer;","import React from 'react';\nimport SortingVisualizer from \"./App/views/SortingVisualizer\";\n\nfunction App() {\n  return (\n    <SortingVisualizer />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}